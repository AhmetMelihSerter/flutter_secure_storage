define(['dart_sdk', 'packages/flutter_secure_storage_platform_interface/flutter_secure_storage_platform.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter_secure_storage__flutter_secure_storage_dart(dart_sdk, packages__flutter_secure_storage_platform_interface__flutter_secure_storage_platform$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const io = dart_sdk.io;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const flutter_secure_storage_platform = packages__flutter_secure_storage_platform_interface__flutter_secure_storage_platform$46dart.flutter_secure_storage_platform;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var flutter_secure_storage = Object.create(dart.library);
  var $_set = dartx._set;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    IdentityMapOfString$String: () => (T.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: flutter_secure_storage.IOSAccessibility.prototype,
        [_name$]: "IOSAccessibility.unlocked",
        index: 1
      });
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: flutter_secure_storage.IOSOptions.prototype,
        [IOSOptions__accessibility]: C[1] || CT.C1,
        [IOSOptions__accountName]: "flutter_secure_storage_service",
        [IOSOptions__groupId]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: flutter_secure_storage.AndroidOptions.prototype
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: flutter_secure_storage.LinuxOptions.prototype
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: flutter_secure_storage.WebOptions.prototype,
        [WebOptions_publicKey]: "FlutterSecureStorage",
        [WebOptions_dbName]: "FlutterEncryptedStorage"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: flutter_secure_storage.MacOsOptions.prototype
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: flutter_secure_storage.WindowsOptions.prototype
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: flutter_secure_storage.IOSAccessibility.prototype,
        [_name$]: "IOSAccessibility.passcode",
        index: 0
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: flutter_secure_storage.IOSAccessibility.prototype,
        [_name$]: "IOSAccessibility.unlocked_this_device",
        index: 2
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: flutter_secure_storage.IOSAccessibility.prototype,
        [_name$]: "IOSAccessibility.first_unlock",
        index: 3
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: flutter_secure_storage.IOSAccessibility.prototype,
        [_name$]: "IOSAccessibility.first_unlock_this_device",
        index: 4
      });
    },
    get C11() {
      return C[11] = dart.constList([C[7] || CT.C7, C[1] || CT.C1, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10], flutter_secure_storage.IOSAccessibility);
    }
  }, false);
  var C = Array(12).fill(void 0);
  var I = ["package:flutter_secure_storage/flutter_secure_storage.dart"];
  var _name$ = dart.privateName(flutter_secure_storage, "_name");
  var IOSOptions__accessibility = dart.privateName(flutter_secure_storage, "IOSOptions._accessibility");
  var IOSOptions__accountName = dart.privateName(flutter_secure_storage, "IOSOptions._accountName");
  var IOSOptions__groupId = dart.privateName(flutter_secure_storage, "IOSOptions._groupId");
  var WebOptions_publicKey = dart.privateName(flutter_secure_storage, "WebOptions.publicKey");
  var WebOptions_dbName = dart.privateName(flutter_secure_storage, "WebOptions.dbName");
  var _selectOptions = dart.privateName(flutter_secure_storage, "_selectOptions");
  flutter_secure_storage.FlutterSecureStorage = class FlutterSecureStorage extends core.Object {
    write(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let iOptions = opts && 'iOptions' in opts ? opts.iOptions : C[0] || CT.C0;
      let aOptions = opts && 'aOptions' in opts ? opts.aOptions : C[2] || CT.C2;
      let lOptions = opts && 'lOptions' in opts ? opts.lOptions : C[3] || CT.C3;
      let webOptions = opts && 'webOptions' in opts ? opts.webOptions : C[4] || CT.C4;
      let mOptions = opts && 'mOptions' in opts ? opts.mOptions : C[5] || CT.C5;
      let wOptions = opts && 'wOptions' in opts ? opts.wOptions : C[6] || CT.C6;
      return value == null ? flutter_secure_storage.FlutterSecureStorage._platform.delete({key: key, options: this[_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions)}) : flutter_secure_storage.FlutterSecureStorage._platform.write({key: key, value: value, options: this[_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions)});
    }
    read(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let iOptions = opts && 'iOptions' in opts ? opts.iOptions : C[0] || CT.C0;
      let aOptions = opts && 'aOptions' in opts ? opts.aOptions : C[2] || CT.C2;
      let lOptions = opts && 'lOptions' in opts ? opts.lOptions : C[3] || CT.C3;
      let webOptions = opts && 'webOptions' in opts ? opts.webOptions : C[4] || CT.C4;
      let mOptions = opts && 'mOptions' in opts ? opts.mOptions : C[5] || CT.C5;
      let wOptions = opts && 'wOptions' in opts ? opts.wOptions : C[6] || CT.C6;
      return flutter_secure_storage.FlutterSecureStorage._platform.read({key: key, options: this[_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions)});
    }
    containsKey(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let iOptions = opts && 'iOptions' in opts ? opts.iOptions : C[0] || CT.C0;
      let aOptions = opts && 'aOptions' in opts ? opts.aOptions : C[2] || CT.C2;
      let lOptions = opts && 'lOptions' in opts ? opts.lOptions : C[3] || CT.C3;
      let webOptions = opts && 'webOptions' in opts ? opts.webOptions : C[4] || CT.C4;
      let mOptions = opts && 'mOptions' in opts ? opts.mOptions : C[5] || CT.C5;
      let wOptions = opts && 'wOptions' in opts ? opts.wOptions : C[6] || CT.C6;
      return flutter_secure_storage.FlutterSecureStorage._platform.containsKey({key: key, options: this[_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions)});
    }
    delete(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let iOptions = opts && 'iOptions' in opts ? opts.iOptions : C[0] || CT.C0;
      let aOptions = opts && 'aOptions' in opts ? opts.aOptions : C[2] || CT.C2;
      let lOptions = opts && 'lOptions' in opts ? opts.lOptions : C[3] || CT.C3;
      let webOptions = opts && 'webOptions' in opts ? opts.webOptions : C[4] || CT.C4;
      let mOptions = opts && 'mOptions' in opts ? opts.mOptions : C[5] || CT.C5;
      let wOptions = opts && 'wOptions' in opts ? opts.wOptions : C[6] || CT.C6;
      return flutter_secure_storage.FlutterSecureStorage._platform.delete({key: key, options: this[_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions)});
    }
    readAll(opts) {
      let iOptions = opts && 'iOptions' in opts ? opts.iOptions : C[0] || CT.C0;
      let aOptions = opts && 'aOptions' in opts ? opts.aOptions : C[2] || CT.C2;
      let lOptions = opts && 'lOptions' in opts ? opts.lOptions : C[3] || CT.C3;
      let webOptions = opts && 'webOptions' in opts ? opts.webOptions : C[4] || CT.C4;
      let mOptions = opts && 'mOptions' in opts ? opts.mOptions : C[5] || CT.C5;
      let wOptions = opts && 'wOptions' in opts ? opts.wOptions : C[6] || CT.C6;
      return flutter_secure_storage.FlutterSecureStorage._platform.readAll({options: this[_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions)});
    }
    deleteAll(opts) {
      let iOptions = opts && 'iOptions' in opts ? opts.iOptions : C[0] || CT.C0;
      let aOptions = opts && 'aOptions' in opts ? opts.aOptions : C[2] || CT.C2;
      let lOptions = opts && 'lOptions' in opts ? opts.lOptions : C[3] || CT.C3;
      let webOptions = opts && 'webOptions' in opts ? opts.webOptions : C[4] || CT.C4;
      let mOptions = opts && 'mOptions' in opts ? opts.mOptions : C[5] || CT.C5;
      let wOptions = opts && 'wOptions' in opts ? opts.wOptions : C[6] || CT.C6;
      return flutter_secure_storage.FlutterSecureStorage._platform.deleteAll({options: this[_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions)});
    }
    [_selectOptions](iOptions, aOptions, lOptions, webOptions, mOptions, wOptions) {
      if (true) {
        return webOptions.params;
      } else if (io.Platform.isLinux) {
        return lOptions.params;
      } else if (io.Platform.isIOS) {
        return iOptions.params;
      } else if (io.Platform.isAndroid) {
        return aOptions.params;
      } else if (io.Platform.isWindows) {
        return wOptions.params;
      } else if (io.Platform.isMacOS) {
        return mOptions.params;
      } else {
        dart.throw(new core.UnsupportedError.new("unsupported_platform"));
      }
    }
  };
  (flutter_secure_storage.FlutterSecureStorage.new = function() {
    ;
  }).prototype = flutter_secure_storage.FlutterSecureStorage.prototype;
  dart.addTypeTests(flutter_secure_storage.FlutterSecureStorage);
  dart.addTypeCaches(flutter_secure_storage.FlutterSecureStorage);
  dart.setMethodSignature(flutter_secure_storage.FlutterSecureStorage, () => ({
    __proto__: dart.getMethods(flutter_secure_storage.FlutterSecureStorage.__proto__),
    write: dart.fnType(async.Future$(dart.void), [], {aOptions: flutter_secure_storage.AndroidOptions, iOptions: flutter_secure_storage.IOSOptions, lOptions: flutter_secure_storage.LinuxOptions, mOptions: flutter_secure_storage.MacOsOptions, wOptions: flutter_secure_storage.WindowsOptions, webOptions: flutter_secure_storage.WebOptions}, {key: core.String, value: dart.nullable(core.String)}),
    read: dart.fnType(async.Future$(dart.nullable(core.String)), [], {aOptions: flutter_secure_storage.AndroidOptions, iOptions: flutter_secure_storage.IOSOptions, lOptions: flutter_secure_storage.LinuxOptions, mOptions: flutter_secure_storage.MacOsOptions, wOptions: flutter_secure_storage.WindowsOptions, webOptions: flutter_secure_storage.WebOptions}, {key: core.String}),
    containsKey: dart.fnType(async.Future$(core.bool), [], {aOptions: flutter_secure_storage.AndroidOptions, iOptions: flutter_secure_storage.IOSOptions, lOptions: flutter_secure_storage.LinuxOptions, mOptions: flutter_secure_storage.MacOsOptions, wOptions: flutter_secure_storage.WindowsOptions, webOptions: flutter_secure_storage.WebOptions}, {key: core.String}),
    delete: dart.fnType(async.Future$(dart.void), [], {aOptions: flutter_secure_storage.AndroidOptions, iOptions: flutter_secure_storage.IOSOptions, lOptions: flutter_secure_storage.LinuxOptions, mOptions: flutter_secure_storage.MacOsOptions, wOptions: flutter_secure_storage.WindowsOptions, webOptions: flutter_secure_storage.WebOptions}, {key: core.String}),
    readAll: dart.fnType(async.Future$(core.Map$(core.String, core.String)), [], {aOptions: flutter_secure_storage.AndroidOptions, iOptions: flutter_secure_storage.IOSOptions, lOptions: flutter_secure_storage.LinuxOptions, mOptions: flutter_secure_storage.MacOsOptions, wOptions: flutter_secure_storage.WindowsOptions, webOptions: flutter_secure_storage.WebOptions}, {}),
    deleteAll: dart.fnType(async.Future$(dart.void), [], {aOptions: flutter_secure_storage.AndroidOptions, iOptions: flutter_secure_storage.IOSOptions, lOptions: flutter_secure_storage.LinuxOptions, mOptions: flutter_secure_storage.MacOsOptions, wOptions: flutter_secure_storage.WindowsOptions, webOptions: flutter_secure_storage.WebOptions}, {}),
    [_selectOptions]: dart.fnType(core.Map$(core.String, core.String), [flutter_secure_storage.IOSOptions, flutter_secure_storage.AndroidOptions, flutter_secure_storage.LinuxOptions, flutter_secure_storage.WebOptions, flutter_secure_storage.MacOsOptions, flutter_secure_storage.WindowsOptions])
  }));
  dart.setLibraryUri(flutter_secure_storage.FlutterSecureStorage, I[0]);
  dart.defineLazy(flutter_secure_storage.FlutterSecureStorage, {
    /*flutter_secure_storage.FlutterSecureStorage.UNSUPPORTED_PLATFORM*/get UNSUPPORTED_PLATFORM() {
      return "unsupported_platform";
    },
    /*flutter_secure_storage.FlutterSecureStorage._platform*/get _platform() {
      return flutter_secure_storage_platform.FlutterSecureStoragePlatform.instance;
    }
  }, false);
  const dbName$ = WebOptions_dbName;
  const publicKey$ = WebOptions_publicKey;
  flutter_secure_storage.WebOptions = class WebOptions extends flutter_secure_storage_platform.Options {
    get dbName() {
      return this[dbName$];
    }
    set dbName(value) {
      super.dbName = value;
    }
    get publicKey() {
      return this[publicKey$];
    }
    set publicKey(value) {
      super.publicKey = value;
    }
    toMap() {
      return new (T.IdentityMapOfString$String()).from(["dbName", this.dbName, "publicKey", this.publicKey]);
    }
  };
  (flutter_secure_storage.WebOptions.new = function(opts) {
    let dbName = opts && 'dbName' in opts ? opts.dbName : "FlutterEncryptedStorage";
    let publicKey = opts && 'publicKey' in opts ? opts.publicKey : "FlutterSecureStorage";
    this[dbName$] = dbName;
    this[publicKey$] = publicKey;
    flutter_secure_storage.WebOptions.__proto__.new.call(this);
    ;
  }).prototype = flutter_secure_storage.WebOptions.prototype;
  dart.addTypeTests(flutter_secure_storage.WebOptions);
  dart.addTypeCaches(flutter_secure_storage.WebOptions);
  dart.setMethodSignature(flutter_secure_storage.WebOptions, () => ({
    __proto__: dart.getMethods(flutter_secure_storage.WebOptions.__proto__),
    toMap: dart.fnType(core.Map$(core.String, core.String), [])
  }));
  dart.setLibraryUri(flutter_secure_storage.WebOptions, I[0]);
  dart.setFieldSignature(flutter_secure_storage.WebOptions, () => ({
    __proto__: dart.getFields(flutter_secure_storage.WebOptions.__proto__),
    dbName: dart.finalFieldType(core.String),
    publicKey: dart.finalFieldType(core.String)
  }));
  dart.defineLazy(flutter_secure_storage.WebOptions, {
    /*flutter_secure_storage.WebOptions.defaultOptions*/get defaultOptions() {
      return C[4] || CT.C4;
    }
  }, false);
  flutter_secure_storage.IOSAccessibility = class IOSAccessibility extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (flutter_secure_storage.IOSAccessibility.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = flutter_secure_storage.IOSAccessibility.prototype;
  dart.addTypeTests(flutter_secure_storage.IOSAccessibility);
  dart.addTypeCaches(flutter_secure_storage.IOSAccessibility);
  dart.setLibraryUri(flutter_secure_storage.IOSAccessibility, I[0]);
  dart.setFieldSignature(flutter_secure_storage.IOSAccessibility, () => ({
    __proto__: dart.getFields(flutter_secure_storage.IOSAccessibility.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(flutter_secure_storage.IOSAccessibility, ['toString']);
  flutter_secure_storage.IOSAccessibility.passcode = C[7] || CT.C7;
  flutter_secure_storage.IOSAccessibility.unlocked = C[1] || CT.C1;
  flutter_secure_storage.IOSAccessibility.unlocked_this_device = C[8] || CT.C8;
  flutter_secure_storage.IOSAccessibility.first_unlock = C[9] || CT.C9;
  flutter_secure_storage.IOSAccessibility.first_unlock_this_device = C[10] || CT.C10;
  flutter_secure_storage.IOSAccessibility.values = C[11] || CT.C11;
  var _groupId = dart.privateName(flutter_secure_storage, "_groupId");
  var _accountName = dart.privateName(flutter_secure_storage, "_accountName");
  var _accessibility = dart.privateName(flutter_secure_storage, "_accessibility");
  const _groupId$ = IOSOptions__groupId;
  const _accountName$ = IOSOptions__accountName;
  const _accessibility$ = IOSOptions__accessibility;
  flutter_secure_storage.IOSOptions = class IOSOptions extends flutter_secure_storage_platform.Options {
    get [_groupId]() {
      return this[_groupId$];
    }
    set [_groupId](value) {
      super[_groupId] = value;
    }
    get [_accountName]() {
      return this[_accountName$];
    }
    set [_accountName](value) {
      super[_accountName] = value;
    }
    get [_accessibility]() {
      return this[_accessibility$];
    }
    set [_accessibility](value) {
      super[_accessibility] = value;
    }
    toMap() {
      return (() => {
        let t0 = new (T.IdentityMapOfString$String()).new();
        t0[$_set]("accessibility", diagnostics.describeEnum(this[_accessibility]));
        if (this[_accountName] != null) t0[$_set]("accountName", dart.nullCheck(this[_accountName]));
        if (this[_groupId] != null) t0[$_set]("groupId", dart.nullCheck(this[_groupId]));
        return t0;
      })();
    }
    copyWith(opts) {
      let t1, t1$, t1$0;
      let groupId = opts && 'groupId' in opts ? opts.groupId : null;
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let accessibility = opts && 'accessibility' in opts ? opts.accessibility : null;
      return new flutter_secure_storage.IOSOptions.new({groupId: (t1 = groupId, t1 == null ? this[_groupId] : t1), accountName: (t1$ = accountName, t1$ == null ? this[_accountName] : t1$), accessibility: (t1$0 = accessibility, t1$0 == null ? this[_accessibility] : t1$0)});
    }
  };
  (flutter_secure_storage.IOSOptions.new = function(opts) {
    let groupId = opts && 'groupId' in opts ? opts.groupId : null;
    let accountName = opts && 'accountName' in opts ? opts.accountName : "flutter_secure_storage_service";
    let accessibility = opts && 'accessibility' in opts ? opts.accessibility : C[1] || CT.C1;
    this[_groupId$] = groupId;
    this[_accessibility$] = accessibility;
    this[_accountName$] = accountName;
    flutter_secure_storage.IOSOptions.__proto__.new.call(this);
    ;
  }).prototype = flutter_secure_storage.IOSOptions.prototype;
  dart.addTypeTests(flutter_secure_storage.IOSOptions);
  dart.addTypeCaches(flutter_secure_storage.IOSOptions);
  dart.setMethodSignature(flutter_secure_storage.IOSOptions, () => ({
    __proto__: dart.getMethods(flutter_secure_storage.IOSOptions.__proto__),
    toMap: dart.fnType(core.Map$(core.String, core.String), []),
    copyWith: dart.fnType(flutter_secure_storage.IOSOptions, [], {accessibility: dart.nullable(flutter_secure_storage.IOSAccessibility), accountName: dart.nullable(core.String), groupId: dart.nullable(core.String)}, {})
  }));
  dart.setLibraryUri(flutter_secure_storage.IOSOptions, I[0]);
  dart.setFieldSignature(flutter_secure_storage.IOSOptions, () => ({
    __proto__: dart.getFields(flutter_secure_storage.IOSOptions.__proto__),
    [_groupId]: dart.finalFieldType(dart.nullable(core.String)),
    [_accountName]: dart.finalFieldType(dart.nullable(core.String)),
    [_accessibility]: dart.finalFieldType(flutter_secure_storage.IOSAccessibility)
  }));
  dart.defineLazy(flutter_secure_storage.IOSOptions, {
    /*flutter_secure_storage.IOSOptions.defaultAccountName*/get defaultAccountName() {
      return "flutter_secure_storage_service";
    },
    /*flutter_secure_storage.IOSOptions.defaultOptions*/get defaultOptions() {
      return C[0] || CT.C0;
    }
  }, false);
  flutter_secure_storage.AndroidOptions = class AndroidOptions extends flutter_secure_storage_platform.Options {
    toMap() {
      return new (T.IdentityMapOfString$String()).new();
    }
  };
  (flutter_secure_storage.AndroidOptions.new = function() {
    flutter_secure_storage.AndroidOptions.__proto__.new.call(this);
    ;
  }).prototype = flutter_secure_storage.AndroidOptions.prototype;
  dart.addTypeTests(flutter_secure_storage.AndroidOptions);
  dart.addTypeCaches(flutter_secure_storage.AndroidOptions);
  dart.setMethodSignature(flutter_secure_storage.AndroidOptions, () => ({
    __proto__: dart.getMethods(flutter_secure_storage.AndroidOptions.__proto__),
    toMap: dart.fnType(core.Map$(core.String, core.String), [])
  }));
  dart.setLibraryUri(flutter_secure_storage.AndroidOptions, I[0]);
  dart.defineLazy(flutter_secure_storage.AndroidOptions, {
    /*flutter_secure_storage.AndroidOptions.defaultOptions*/get defaultOptions() {
      return C[2] || CT.C2;
    }
  }, false);
  flutter_secure_storage.LinuxOptions = class LinuxOptions extends flutter_secure_storage_platform.Options {
    toMap() {
      return new (T.IdentityMapOfString$String()).new();
    }
  };
  (flutter_secure_storage.LinuxOptions.new = function() {
    flutter_secure_storage.LinuxOptions.__proto__.new.call(this);
    ;
  }).prototype = flutter_secure_storage.LinuxOptions.prototype;
  dart.addTypeTests(flutter_secure_storage.LinuxOptions);
  dart.addTypeCaches(flutter_secure_storage.LinuxOptions);
  dart.setMethodSignature(flutter_secure_storage.LinuxOptions, () => ({
    __proto__: dart.getMethods(flutter_secure_storage.LinuxOptions.__proto__),
    toMap: dart.fnType(core.Map$(core.String, core.String), [])
  }));
  dart.setLibraryUri(flutter_secure_storage.LinuxOptions, I[0]);
  dart.defineLazy(flutter_secure_storage.LinuxOptions, {
    /*flutter_secure_storage.LinuxOptions.defaultOptions*/get defaultOptions() {
      return C[3] || CT.C3;
    }
  }, false);
  flutter_secure_storage.WindowsOptions = class WindowsOptions extends flutter_secure_storage_platform.Options {
    toMap() {
      return new (T.IdentityMapOfString$String()).new();
    }
  };
  (flutter_secure_storage.WindowsOptions.new = function() {
    flutter_secure_storage.WindowsOptions.__proto__.new.call(this);
    ;
  }).prototype = flutter_secure_storage.WindowsOptions.prototype;
  dart.addTypeTests(flutter_secure_storage.WindowsOptions);
  dart.addTypeCaches(flutter_secure_storage.WindowsOptions);
  dart.setMethodSignature(flutter_secure_storage.WindowsOptions, () => ({
    __proto__: dart.getMethods(flutter_secure_storage.WindowsOptions.__proto__),
    toMap: dart.fnType(core.Map$(core.String, core.String), [])
  }));
  dart.setLibraryUri(flutter_secure_storage.WindowsOptions, I[0]);
  dart.defineLazy(flutter_secure_storage.WindowsOptions, {
    /*flutter_secure_storage.WindowsOptions.defaultOptions*/get defaultOptions() {
      return C[6] || CT.C6;
    }
  }, false);
  flutter_secure_storage.MacOsOptions = class MacOsOptions extends flutter_secure_storage_platform.Options {
    toMap() {
      return new (T.IdentityMapOfString$String()).new();
    }
  };
  (flutter_secure_storage.MacOsOptions.new = function() {
    flutter_secure_storage.MacOsOptions.__proto__.new.call(this);
    ;
  }).prototype = flutter_secure_storage.MacOsOptions.prototype;
  dart.addTypeTests(flutter_secure_storage.MacOsOptions);
  dart.addTypeCaches(flutter_secure_storage.MacOsOptions);
  dart.setMethodSignature(flutter_secure_storage.MacOsOptions, () => ({
    __proto__: dart.getMethods(flutter_secure_storage.MacOsOptions.__proto__),
    toMap: dart.fnType(core.Map$(core.String, core.String), [])
  }));
  dart.setLibraryUri(flutter_secure_storage.MacOsOptions, I[0]);
  dart.defineLazy(flutter_secure_storage.MacOsOptions, {
    /*flutter_secure_storage.MacOsOptions.defaultOptions*/get defaultOptions() {
      return C[5] || CT.C5;
    }
  }, false);
  dart.trackLibraries("packages/flutter_secure_storage/flutter_secure_storage.dart", {
    "package:flutter_secure_storage/flutter_secure_storage.dart": flutter_secure_storage
  }, {
    "package:flutter_secure_storage/flutter_secure_storage.dart": ["./options/web_options.dart", "./options/ios_options.dart", "./options/android_options.dart", "./options/linux_options.dart", "./options/windows_options.dart", "./options/macos_options.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["flutter_secure_storage.dart","options/web_options.dart","options/ios_options.dart","options/android_options.dart","options/linux_options.dart","options/windows_options.dart","options/macos_options.dart"],"names":[],"mappings":"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","file":"../../../../../packages/flutter_secure_storage/flutter_secure_storage.dart.lib.js"}');
  // Exports:
  return {
    flutter_secure_storage: flutter_secure_storage
  };
}));

//# sourceMappingURL=flutter_secure_storage.dart.lib.js.map
